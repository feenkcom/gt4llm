{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-10-10T22:33:30.308696+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-10-10T22:33:36.992399+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "ysxdlXPgDQCzdBH4BRiBow=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "There are at least two ways to use LLMs for supporting understanding of software systems:\n(A) use LLMs to generate summaries\n(B) use LLMs to generate tools with which you generate summaries\n\nThe difference might appear subtle, but it's significant. There are a number of recent article proposes mostly (A) as a direction. These use LLMs as solution generators.\n\nHowever, any concrete solutions entail biases. When we get the final answer, these biases are invisible. The solution might be correct, but you'd have no real way of knowing what tradeoffs they contain. The alternative is to regard current LLMs are generators of possibilities that should be evaluated against reality before being relied upon for decision making in a technical space.\n\nThat is why I favor (B) especially when combined with a moldable development environment. When we get the tools we have a chance to review the bias and apply other forms of checks, too. We can then use these tools to produce visualizations of the system ourselves.\n\nLLMs work interestingly well for shallow questions (I call shallow the questions whose answers can be evaluated against reality quickly). Moldable Development splits technical decision making into small shallow problems addressed by small shallow tools. As such, it can be a fertile target LLMs.\n\nOh yes, I know, agents can add include feedback when generating solutions. But even then, there is no reason to not expose biases. In a technical space we can nicely produce the tools we can use without intermediaries against the system."
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-10T22:25:12.987951+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-10T22:26:39.147847+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "vyiY54bgDQCQdRTkCPEkXA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Consider the following post:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-10-09T23:20:41.078429+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-10-09T23:22:08.016461+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "ym4fkHPgDQCxY5ehBRiBow=="
							},
							"code" : "tutor := GtOpenAIAnnotatedActionTutor withApiKeyFromFile formatName: 'post editor'."
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-10-09T23:20:54.026256+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-10-10T22:26:19.713321+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "3f3kkHPgDQCxdMDVBRiBow=="
							},
							"code" : "tutor\r\taddFormatComponent: (GtLlmTutorFormatComponent new\r\t\t\tname: 'Post';\r\t\t\tformat: 'Text';\r\t\t\texample: '');\r\tvaluePipelineFor: (GtLlmSerializableValueHolder new\r\t\t\tname: 'Post';\r\t\t\tcontent: thisSnippet page children first children first;\r\t\t\tserializer: [ :aSnippet | aSnippet text asString ];\r\t\t\tupdater: [ :aSnippet :aText | \r\t\t\t\t(aSnippet commandBuilder editTextualSnippetCommand\r\t\t\t\t\tstring: aText\r\t\t\t\t\twithSource: tutor -> true) execute ]).\rchat := tutor createAssistant addChat"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-10T22:25:44.182383+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-10T22:26:10.107224+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Ku/96IbgDQCRFdl/CPEkXA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Let's create a chat with this post being the center of interest:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-10-10T21:51:09.134163+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2024-10-15T17:20:15.018223+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "1WPFbYbgDQCJc8fKBRiBow=="
							},
							"code" : "demoTutor := GtDPostTutor withApiKeyFromFile\r\t\tvaluePipelineFor: (GtLlmSerializableValueHolder new\r\t\t\t\tname: 'Post';\r\t\t\t\tcontent: thisSnippet page children first children first;\r\t\t\t\tserializer: [ :aSnippet | aSnippet text asString ];\r\t\t\t\tupdater: [ :aSnippet :aText | \r\t\t\t\t\t(aSnippet commandBuilder editTextualSnippetCommand\r\t\t\t\t\t\tstring: aText\r\t\t\t\t\t\twithSource: demoTutor -> true) execute ]).\rdemoChat := demoTutor createAssistant addChat"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-10T21:55:50.837858+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-10-10T21:56:14.486678+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "fq7QfYbgDQCLM6BfBRiBow=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The below tutor was generated by reifying the message, tutor and actions directly from chat:"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-10-09T23:20:47.409052+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-10-09T23:20:47.409052+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Creating a read-write post tutor"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "bf6d1f90-73e0-0d00-b162-f1c0051881a3"
	}
}